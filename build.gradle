buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'


version = '1.0.0'
group = 'fr.eno.craftcreator' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'craftcreator'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    // mappings channel: 'parchment', version: "1.18.1-2022.03.06-1.18.2"
    mappings channel: 'official', version: "1.19.2"

    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'craftcreator'

            mods {
                craftcreator {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'craftcreator'

            mods {
                craftcreator {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'craftcreator'

            mods {
                craftcreator {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                craftcreator {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main { output.resourcesDir = output.classesDirs.singleFile }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Architectury API Maven
    maven { url = "https://maven.architectury.dev" }

    // KubeJS and Rhino Maven
    // you can also use Lat's Maven @ https://maven.latvian.dev/
    maven { url = "https://maven.saps.dev/minecraft" }

    // Botania and Patchouli Maven
    maven { url = "https://maven.blamejared.com" }

    // Curios Maven (Botania Dependency)
    maven { url = "https://maven.theillusivec4.top/" }

    // CoFH Maven
    maven { url = "https://maven.covers1624.net" }

    // Curseforge Maven
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'

    // KubeJS
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")

    // KubeJS Dependencies
    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

    /*
     * Mods and their dependencies
     */

    implementation fg.deobf("vazkii.botania:Botania:${botania_version}") // Botania

    // Botania Dependency
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")

    // Thermal Expansion
    implementation fg.deobf("curse.maven:Thermal-Expansion-69163:${thermal_expansion_cursefileid}")

    // Thermal Foundation
    implementation fg.deobf("curse.maven:Thermal-Foundation-222880:${thermal_foundation_cursefileid}")

    // Thermal Depedency
    implementation fg.deobf("curse.maven:CoFH-Core-69162:${cofh_core_cursefileid}")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "craftcreator",
                "Specification-Vendor"    : "En0ri4n",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "En0ri4n",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
